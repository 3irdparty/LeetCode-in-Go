package problem0924

func minMalwareSpread(graph [][]int, initial []int) int {
	size := len(graph)
	isInitial := [301]bool{}
	for _, n := range initial {
		isInitial[n] = true
	}

	maxCount := -1
	res := 0

	for i := 0; i <= 300; i++ {
		if !isInitial[i] {
			continue
		}

		hasSeen := [301]bool{}
		hasSeen[i] = true

		count := 1

		queue := []int{i}

		// BFS
		for len(queue) > 0 {
			queueSize := len(queue)
			for n := 0; n < queueSize; n++ {
				j := queue[n]
				for k := 0; k < size; k++ {
					if hasSeen[k] ||
						graph[j][k] != 1 {
						continue
					}
					hasSeen[k] = true
					isInitial[k] = false
					count++
					queue = append(queue, k)
				}

			}
			queue = queue[queueSize:]
		}

		if count > maxCount {
			maxCount = count
			res = i
		}
	}

	return res
}

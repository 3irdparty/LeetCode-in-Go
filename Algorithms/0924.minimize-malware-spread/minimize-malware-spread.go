package problem0924

func minMalwareSpread(graph [][]int, initial []int) int {
	size := len(graph)

	isInitial := [301]bool{}
	for _, n := range initial {
		isInitial[n] = true
	}

	maxCount := -1
	res := -1

	for i := 0; i < size; i++ {
		if !isInitial[i] {
			continue
		}

		hasSeen := [301]bool{}
		hasSeen[i] = true

		count := 1

		queue := make([]int, 1, size)
		queue[0] = i

		// BFS
		for len(queue) > 0 {
			queueSize := len(queue)
			for idx := 0; idx < queueSize; idx++ {
				j := queue[idx]
				for k := 0; k < size; k++ {
					if !hasSeen[k] && graph[j][k] == 1 {
						hasSeen[k] = true
						isInitial[k] = false
						count++
						queue = append(queue, k)
					}
				}

			}
			queue = queue[queueSize:]
		}

		if count > maxCount {
			maxCount = count
			res = i
		}
	}

	return res
}

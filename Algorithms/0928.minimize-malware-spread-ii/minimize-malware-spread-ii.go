package problem0928

import "sort"

func minMalwareSpread(graph [][]int, initial []int) int {
	if len(initial) == 1 {
		return initial[0]
	}

	size := len(graph)

	infected := make([]int, size)
	for i := range infected {
		infected[i] = -1
	}
	count := make([]int, size)
	for _, i := range initial {
		infected[i] = i
		count[i] = 1
	}

	sort.Ints(initial)

	queue := initial

	// BFS
	for len(queue) > 0 {
		queueSize := len(queue)
		for f := 0; f < queueSize; f++ {
			i := queue[f]
			infectedSource := infected[i]
			for j := 0; j < size; j++ {
				if graph[i][j] == 1 &&
					infected[j] == -1 {
					infected[j] = infectedSource
					count[infectedSource]++
					queue = append(queue, j)
				}
			}
		}
		queue = queue[queueSize:]
	}

	res, maxCount := -1, -1

	for i, c := range count {
		if maxCount < c {
			maxCount = c
			res = i
		}
	}

	return res
}

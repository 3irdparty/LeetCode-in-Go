package problem0928

import "sort"

func minMalwareSpread(graph [][]int, initial []int) int {
	size := len(graph)

	infected := make([]bool, size)
	for _, i := range initial {
		infected[i] = true
	}

	var dfs func(int, []bool) int
	dfs = func(i int, hasSeen []bool) int {
		if infected[i] {
			return 0
		}
		count := 0
		hasSeen[i] = true
		for j := 0; j < size; j++ {
			if graph[i][j] == 0 || hasSeen[j] {
				continue
			}
			c := dfs(j, hasSeen)
			if c == 0 {
				return 0
			}
			count += c
		}
		return count + 1
	}

	sort.Ints(initial)
	res := initial[0]
	maxCount := 0

	for _, i := range initial {
		count := 0
		for j := 0; j < size; j++ {
			if graph[i][j] == 0 {
				continue
			}
			hasSeen := make([]bool, size)
			hasSeen[i] = true
			count += dfs(j, hasSeen)
		}
		if maxCount < count {
			maxCount = count
			res = i
		}
	}

	return res
}

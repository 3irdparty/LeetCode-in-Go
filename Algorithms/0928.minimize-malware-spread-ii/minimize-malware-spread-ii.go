package problem0928

func minMalwareSpread(graph [][]int, initial []int) int {
	size := len(graph)

	infected := make([]bool, size)
	res := size
	for _, i := range initial {
		infected[i] = true
		res = min(res, i)
	}

	seen := make([]bool, size)

	var dfs func(int) int
	dfs = func(i int) int {
		if infected[i] {
			return 0
		}
		count := 1 // 1 是代表了 i 本身
		seen[i] = true
		for j := 0; j < size; j++ {
			if seen[j] || graph[i][j] == 0 {
				continue
			}
			c := dfs(j)
			if c == 0 {
				infected[i] = true
				seen[i] = false // 不设置为 false 的话，就不会再检查 i 是否 infected。
				return 0
			}
			count += c
		}
		return count
	}

	maxCount := 0

	for _, i := range initial {
		count := 0
		seen[i] = true
		for j := 0; j < size; j++ {
			if seen[j] || graph[i][j] == 0 {
				continue
			}
			count += dfs(j)
		}
		if maxCount < count {
			maxCount = count
			res = i
		}
	}

	return res
}

func min(a, b int) int {
	if a < b {
		return a
	}
	return b
}
